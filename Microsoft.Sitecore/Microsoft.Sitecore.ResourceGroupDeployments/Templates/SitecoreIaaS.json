 {
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sitecoreSetupSecureUri": {
      "type": "securestring",
      "metadata": {
        "description": "Sitecore secure setup access url."
      }
    },
    "sitecoreLicenseSecureUri": {
      "type": "securestring",
      "metadata": {
        "description": "Sitecore secure license url."
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "MSSitecore",
      "metadata": {
        "description": "A unique prefix for the azure resources (use alphabets and less than 10 characters only)."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "SitecoreVNet",
      "metadata": {
        "description": "Virtual network name where the Sitecore resources are deployed."
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Virtual network address space prefix."
      }
    },
    "frontendWebSubnetName": {
      "type": "string",
      "defaultValue": "CDSubnet",
      "metadata": {
        "description": "Frontend web subnet name."
      }
    },
    "frontendWebSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Frontend web subnet prefix."
      }
    },
    "backendDBSubnetName": {
      "type": "string",
      "defaultValue": "DBSubnet",
      "metadata": {
        "description": "Backend DB subnet name."
      }
    },
    "backendDBSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Backend DB subnet prefix"
      }
    },
    "backendWebSubnetName": {
      "type": "string",
      "defaultValue": "CMSubnet",
      "metadata": {
        "description": "Backend web CM subnet name."
      }
    },
    "backendWebSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Backend web CM subnet prefix"
      }
    },
    "sqlServerVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS4",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the SQL Server VM"
      }
    },
    "sqlServerVMAdminUsername": {
      "type": "string",
      "defaultValue": "sqlservervmadmin",
      "metadata": {
        "description": "SQL Server VM Admin Username."
      }
    },
    "sqlServerVMAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server VM Admin Password."
      }
    },
    "sqlServerSqlLoginName": {
      "type": "string",
      "defaultValue": "sitecoreUser",
      "metadata": {
        "description": "SQL Server SQL login name."
      }
    },
    "sqlServerSqlLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server SQL Login Password"
      }
    },
    "sqlServerDbUsername": {
      "type": "string",
      "defaultValue": "sitecoreUser",
      "metadata": {
        "description": "SQL Server DB User Name"
      }
    },
    "sqlServerDbRoleName": {
      "type": "string",
      "defaultValue": "db_owner",
      "metadata": {
        "description": "SQL Server DB Role Name"
      }
    },
    "sqlServerBootstrapScriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/suneetnangia/azure-templates-sitecore/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/Scripts/SitecoreDBServerConfigurationBootstrapper.ps1",
      "metadata": {
        "description": "Powershell bootstrap script url which runs other script(s) under VM local admin account on the SQL Server."
      }
    },
    "sqlServerDBConfigScriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/suneetnangia/azure-templates-sitecore/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/Scripts/SitecoreDBServerConfiguration.ps1",
      "metadata": {
        "description": "Powershell script url which configures Sitecore DB on the server."
      }
    },
    "sqlServerCustomScriptFileToRun": {
      "type": "string",
      "defaultValue": "SitecoreDBServerConfigurationBootstrapper.ps1",
      "metadata": {
        "description": "Script to run on the SQL Server."
      }
    },
    "sqlServerSitecoreDBConfigDSCScriptUri": {
      "type": "string",
      "defaultValue": "https://github.com/suneetnangia/azure-templates-sitecore/raw/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/DSC/SitecoreDBServerSetup.ps1.zip",
      "metadata": {
        "description": "Powershell DSC script url which runs on SQL Server."
      }
    },

    "cmVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A6",
        "Standard_A7"
      ],
      "metadata": {
        "description": "Allowed/recommended size of the VMs."
      }
    },
    "cmVMAdminUsername": {
      "type": "string",
      "defaultValue": "cmvmadmin",
      "metadata": {
        "description": "CM VM local admin username."
      }
    },
    "cmVMAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "CM VM local admin password."
      }
    },
    "cmSitecoreConfigScriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/suneetnangia/azure-templates-sitecore/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/Scripts/SitecoreCDCMServerConfiguration.ps1",
      "metadata": {
        "description": "Powershell script url which configure Sitecore on the CM server."
      }
    },
    "cmCustomScriptFileToRun": {
      "type": "string",
      "defaultValue": "SitecoreCDCMServerConfiguration.ps1",
      "metadata": {
        "description": "Script to configure CM server."
      }
    },
    "cmSitecoreConfigDSCScriptUri": {
      "type": "string",
      "defaultValue": "https://github.com/suneetnangia/azure-templates-sitecore/raw/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/DSC/SitecoreCMCDServerSetup.ps1.zip",
      "metadata": {
        "description": "Powershell DSC script to configure CM server."
      }
    },

    "cdNumberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs needed to load balance the traffic to Sitecore CD CM role."
      }
    },
    "cdVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_A4",
        "Standard_A6",
        "Standard_A7"
      ],
      "metadata": {
        "description": "Allowed/recommended size of the VMs."
      }
    },
    "cdVMAdminUsername": {
      "type": "string",
      "defaultValue": "cdvmadmin",
      "metadata": {
        "description": "CM CD VM local admin username."
      }
    },
    "cdVMAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "CM CD VM local admin password."
      }
    },
    "cdSitecoreConfigScriptUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/suneetnangia/azure-templates-sitecore/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/Scripts/SitecoreCDCMServerConfiguration.ps1",
      "metadata": {
        "description": "Powershell script url which configure Sitecore on the CD CM server."
      }
    },
    "cdCustomScriptFileToRun": {
      "type": "string",
      "defaultValue": "SitecoreCDCMServerConfiguration.ps1",
      "metadata": {
        "description": "Script to configure CD CM server."
      }
    },
    "cdSitecoreConfigDSCScriptUri": {
      "type": "string",
      "defaultValue": "https://github.com/suneetnangia/azure-templates-sitecore/raw/master/Microsoft.Sitecore/Microsoft.Sitecore.ResourceGroupDeployments/DSC/SitecoreCMCDServerSetup.ps1.zip",
      "metadata": {
        "description": "Powershell DSC script to configure CD CM server."
      }
    }
  },
  "variables": {
    "VnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "setupSecureUri": "[concat('\"',parameters('sitecoreSetupSecureUri'), '\"')]",
    "licenseSecureUri": "[concat('\"',parameters('sitecoreLicenseSecureUri'), '\"')]",

    "sqlServerResourcePrefix": "[concat(parameters('resourcePrefix'), 'SQL')]",
    "sqlServerImagePublisher": "MicrosoftSQLServer",
    "sqlServerImageOffer": "SQL2014SP1-WS2012R2",
    "sqlServerImageSKU": "Enterprise",
    "sqlServerStorageAccountName": "[toLower(concat('SQL', uniqueString(resourceGroup().id)))]",
    "sqlServerOsDisk": "[concat('http://', variables('sqlServerStorageAccountName'),'.blob.core.windows.net/vhds/', concat(variables('sqlServerResourcePrefix'),'OS.vhd'))]",
    "sqlServerDataDisk1VhdName": "[concat('http://',variables('sqlServerStorageAccountName'),'.blob.core.windows.net/vhds','/',variables('sqlServerResourcePrefix'),'DataDisk1.vhd')]",
    "sqlServerDataDisk2VhdName": "[concat('http://',variables('sqlServerStorageAccountName'),'.blob.core.windows.net/vhds','/',variables('sqlServerResourcePrefix'),'DataDisk2.vhd')]",
    "sqlServerSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('backendDBSubnetName'))]",
    "sqlServerSizeOfEachDataDiskInGB": 1023, 
    "sqlServerStorageAccountType": "Premium_LRS",
    "sqlServerPublicIPName": "[concat(variables('sqlServerResourcePrefix'),'PublicIP')]",
    "sqlServerPublicIPAddressType": "Dynamic",
    "sqlServerNicName": "[concat(variables('sqlServerResourcePrefix'),'NIC')]",

    "sqlServerLocalUnzippedDBFilesPath": "[concat('\"', 'd:\\SitecoreSetup\\Sitecore 8.1 rev. 151207\\Databases', '\"')]",
    "sqlServerSetupSecureUri": "[concat('\"',parameters('sitecoreSetupSecureUri'), '\"')]",
    "sqlServerCustomScriptCommandToExecute": "[concat('powershell.exe -File', ' ', parameters('sqlServerCustomScriptFileToRun'), ' ', 'd:\\SitecoreSetup.zip', ' ', 'd:\\SitecoreSetup', ' ', variables('sqlServerLocalUnzippedDBFilesPath'), ' ', variables('setupSecureUri'), ' ', 'U:\\Sitecore\\SQL\\Data', ' ', 'L:\\Sitecore\\SQL\\Log', ' ', parameters('sqlServerVMAdminUsername'), ' ', parameters('sqlServerVMAdminPassword'), ' ', parameters('sqlServerSqlLoginName'), ' ', parameters('sqlServerSqlLoginPassword'), ' ', parameters('sqlServerDbUsername'), ' ', parameters('sqlServerDbRoleName'))]",

    "cmResourcePrefix": "[concat(parameters('resourcePrefix'), 'CM')]",
    "cmImagePublisher": "MicrosoftWindowsServer",
    "cmImageOffer": "WindowsServer",
    "cmImageSKU": "2012-R2-Datacenter",
    "cmSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('backendWebSubnetName'))]",
    "cmStorageAccountName": "[toLower(concat('CMB',uniqueString(resourceGroup().id)))]",
    "cmPublicIPAddressType": "Dynamic",
    "cmStorageAccountType": "Premium_LRS",

    "cmCoreConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Core\"')]",
    "cmWebConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Web\"')]",
    "cmMasterConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Master\"')]",
    "cmReportingConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Reporting\"')]",
    "cmSessionsConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Sessions\"')]",
    "cmCustomScriptCommandToExecute": "[concat('powershell.exe -File', ' ', parameters('cmCustomScriptFileToRun'), ' ', variables('setupSecureUri'), ' ', variables('licenseSecureUri'), ' ', 'd:\\SitecoreSetup.zip', ' ', 'd:\\SitecoreSetup', ' ', 'C:\\inetpub\\wwwroot\\AzureSitecore\\website', ' ', variables('cmCoreConnStr'), ' ', variables('cmMasterConnStr'), ' ', variables('cmWebConnStr'), ' ', variables('cmReportingConnStr'), ' ', variables('cmSessionsConnStr'))]",


    "cdResourcePrefix": "[concat(parameters('resourcePrefix'), 'CD')]",
    "cdImagePublisher": "MicrosoftWindowsServer",
    "cdImageOffer": "WindowsServer",
    "cdImageSKU": "2012-R2-Datacenter",
    "cdSubnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('frontendWebSubnetName'))]",
    "cdStorageAccountName": "[toLower(concat('CDB',uniqueString(resourceGroup().id)))]",
    "cdPublicLBIPName": "[concat(variables('cdResourcePrefix'),'LBPublicIP')]",
    "cdPublicLBIPDNSName": "[toLower(concat(variables('cdResourcePrefix'),'publicLBIPName'))]",
    "cdPublicLBIPId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('cdPublicLBIPName'))]",
    "cdPublicLBId": "[resourceId('Microsoft.Network/loadBalancers',variables('cdPublicLBName'))]",
    "cdPublicLBName": "[concat(variables('cdResourcePrefix'),'LBPublic')]",
    "cdPublicLBFrontEndIPConfigId": "[concat(variables('cdPublicLBId'),'/frontendIPConfigurations/LoadBalancerFE')]",
    "cdPublicLBPoolId": "[concat(variables('cdPublicLBId'),'/backendAddressPools/BEPool')]",
    "cdPublicLBProbeId": "[concat(variables('cdPublicLBId'),'/probes/tcpPort80Probe')]",
    "cdPublicIPAddressType": "Dynamic",
    "cdStorageAccountType": "Premium_LRS",

    "cdCoreConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Core\"')]",
    "cdWebConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Web\"')]",
    "cdMasterConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Master\"')]",
    "cdReportingConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Reporting\"')]",
    "cdSessionsConnStr": "[concat('\"user id=', parameters('sqlServerSqlLoginName'), ';password=', parameters('sqlServerSqlLoginPassword'), ';Data Source=', variables('sqlServerResourcePrefix'), ';Database=Sitecore.Sessions\"')]",
    "cdCustomScriptCommandToExecute": "[concat('powershell.exe -File', ' ', parameters('cdCustomScriptFileToRun'), ' ', variables('setupSecureUri'), ' ', variables('licenseSecureUri'), ' ', 'd:\\SitecoreSetup.zip', ' ', 'd:\\SitecoreSetup', ' ', 'C:\\inetpub\\wwwroot\\AzureSitecore\\website', ' ', variables('cdCoreConnStr'), ' ', variables('cdMasterConnStr'), ' ', variables('cdWebConnStr'), ' ', variables('cdReportingConnStr'), ' ', variables('cdSessionsConnStr'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('frontendWebSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('frontendWebSubnetPrefix')]"
            }
          },
          {
            "name": "[parameters('backendWebSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('backendWebSubnetPrefix')]"
            }
          },
          {
            "name": "[parameters('backendDBSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('backendDBSubnetPrefix')]"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "name": "[variables('sqlServerStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('sqlServerStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "name": "[variables('sqlServerPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('sqlServerPublicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "name": "[variables('sqlServerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('sqlServerPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "[variables('sqlServerPublicIPAddressType')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sqlServerPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('sqlServerSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "name": "[variables('sqlServerResourcePrefix')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('sqlServerStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('sqlServerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('sqlServerVMSize')]"
        },
        "osProfile": {
          "computerName": "[variables('sqlServerResourcePrefix')]",
          "adminUsername": "[parameters('sqlServerVMAdminUserName')]",
          "adminPassword": "[parameters('sqlServerVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlServerImagePublisher')]",
            "offer": "[variables('sqlServerImageOffer')]",
            "sku": "[variables('sqlServerImageSKU')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('sqlServerSizeOfEachDataDiskInGB')]",
              "lun": 0,
              "vhd": {
                "Uri": "[variables('sqlServerDataDisk1VhdName')]"
              },
              "createOption": "Empty",
              "caching": "None"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[variables('sqlServerSizeOfEachDataDiskInGB')]",
              "lun": 1,
              "vhd": {
                "Uri": "[variables('sqlServerDataDisk2VhdName')]"
              },
              "createOption": "Empty",
              "caching": "ReadOnly"
            }
          ],
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[variables('sqlServerOsDisk')]"
            },
            "diskSizeGB": "1023",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sqlServerNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "false",
            "storageUri": "[concat('http://',variables('sqlServerStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "ConfigureVMDSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('sqlServerResourcePrefix'))]"
          ],
          "tags": {
            "displayName": "ConfigureVMDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[parameters('sqlServersitecoreDBConfigDSCScriptUri')]",
              "configurationFunction": "SitecoreDBServerSetup.ps1\\SitecoreDBServerSetup",
              "properties": {
                "nodeName": "[variables('sqlServerResourcePrefix')]"
              }
            },
            "protectedSettings": { }
          }
        },
        {
          "name": "ConfigureVMPS",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('sqlServerResourcePrefix'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('sqlServerResourcePrefix'), 'ConfigureVMDSC')]"
          ],
          "tags": {
            "displayName": "ConfigureVMPS"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[parameters('sqlServerBootstrapScriptUri')]",
                "[parameters('sqlServerDBConfigScriptUri')]"
              ],
              "commandToExecute": "[variables('sqlServerCustomScriptCommandToExecute')]",
              "timestamp": 12345712
            }
          }
        }
      ]
    },

    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "name": "[variables('cmStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('cmStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cmResourcePrefix'),'AvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cmResourcePrefix'),'PublicIP')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('cmPublicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cmResourcePrefix'),'NIC')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('cmResourcePrefix'),'PublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('cmResourcePrefix'),'PublicIP'))]"
              },
              "subnet": {
                "id": "[variables('cmSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('cmResourcePrefix'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('cmStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('cmResourcePrefix'),'NIC'))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(variables('cmResourcePrefix'),'AvailabilitySet'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('cmVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('cmResourcePrefix'),'AvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('cmResourcePrefix'))]",
          "adminUsername": "[parameters('cmVMAdminUsername')]",
          "adminPassword": "[parameters('cmVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('cmImagePublisher')]",
            "offer": "[variables('cmImageOffer')]",
            "sku": "[variables('cmImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('cmStorageAccountName'),'.blob.core.windows.net/vhds/', concat(variables('cmResourcePrefix'),'OS.vhd'))]"
            },
            "diskSizeGB": "1023",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('cmResourcePrefix'),'NIC'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "false",
            "storageUri": "[concat('http://',variables('cmStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "ConfigureVMDSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(variables('cmResourcePrefix')))]"
          ],
          "tags": {
            "displayName": "ConfigureVMDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[parameters('cmSitecoreConfigDSCScriptUri')]",
              "configurationFunction": "SitecoreCMCDServerSetup.ps1\\SitecoreCMCDServerSetup",
              "properties": {
                "nodeName": "[concat(variables('cmResourcePrefix'))]",
                "sitecoreAppPoolName": "SitecoreAppPool",
                "sitecoreWebsiteName": "AzureSitecore"
              }
            },
            "protectedSettings": { }
          }
        },
        {
          "name": "ConfigureVMPS",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(variables('cmResourcePrefix')))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('cmResourcePrefix')), 'ConfigureVMDSC')]"
          ],
          "tags": {
            "displayName": "ConfigureVMPS"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[parameters('cmSitecoreConfigScriptUri')]"
              ],
              "commandToExecute": "[variables('cmCustomScriptCommandToExecute')]",
              "timestamp": 400003
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "name": "[variables('cdStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('cdStorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cdResourcePrefix'),'AvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cdResourcePrefix'),copyindex(),'PublicIP')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('cdNumberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('cdPublicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('cdResourcePrefix'),copyindex(),'NIC')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('cdNumberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('cdResourcePrefix'),copyindex(),'PublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('cdPublicLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('cdResourcePrefix'),copyindex(),'PublicIP'))]"
              },
              "subnet": {
                "id": "[variables('cdSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('cdPublicLBId'), '/backendAddressPools/BEPool')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('cdResourcePrefix'),copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('cdNumberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('cdStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('cdResourcePrefix'),copyindex(),'NIC'))]",
        "[concat('Microsoft.Compute/availabilitySets/', concat(variables('cdResourcePrefix'),'AvailabilitySet'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('cdVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('cdResourcePrefix'),'AvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[concat(variables('cdResourcePrefix'),copyindex())]",
          "adminUsername": "[parameters('cdVMAdminUsername')]",
          "adminPassword": "[parameters('cdVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('cdImagePublisher')]",
            "offer": "[variables('cdImageOffer')]",
            "sku": "[variables('cdImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('cdStorageAccountName'),'.blob.core.windows.net/vhds/', concat(variables('cdResourcePrefix'),copyindex(),'OS.vhd'))]"
            },
            "diskSizeGB": "1023",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('cdResourcePrefix'),copyindex(),'NIC'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "false",
            "storageUri": "[concat('http://',variables('cdStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "ConfigureVMDSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(variables('cdResourcePrefix'),copyindex()))]"
          ],
          "tags": {
            "displayName": "ConfigureVMDSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[parameters('cdSitecoreConfigDSCScriptUri')]",
              "configurationFunction": "SitecoreCMCDServerSetup.ps1\\SitecoreCMCDServerSetup",
              "properties": {
                "nodeName": "[concat(variables('cdResourcePrefix'),copyindex())]",
                "sitecoreAppPoolName": "SitecoreAppPool",
                "sitecoreWebsiteName": "AzureSitecore"
              }
            },
            "protectedSettings": { }
          }
        },
        {
          "name": "ConfigureVMPS",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(variables('cdResourcePrefix'),copyindex()))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('cdResourcePrefix'),copyindex()), 'ConfigureVMDSC')]"
          ],
          "tags": {
            "displayName": "ConfigureVMPS"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[parameters('cdSitecoreConfigScriptUri')]"
              ],
              "commandToExecute": "[variables('cdCustomScriptCommandToExecute')]",
              "timestamp": 400003
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "name": "[variables('cdPublicLBIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('cdPublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('cdPublicLBIPDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('cdPublicLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('cdPublicLBIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFE",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('cdPublicLBIPId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BEPool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "Http80",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('cdPublicLBFrontEndIPConfigId')]"
              },
              "backendAddressPool": {
                "id": "[variables('cdPublicLBPoolId')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('cdPublicLBProbeId')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpPort80Probe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    }
  ]
}
